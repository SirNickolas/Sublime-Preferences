<snippet>
	<description>C++ template</description>
	<content><![CDATA[#include <bits/stdc++.h>//

#define fst first
#define snd second
#define _   << ' ' <<

using namespace std;

typedef unsigned char       uchar;
typedef basic_string<uchar> ustring;
typedef long long           llong;
typedef unsigned long long  ullong;
typedef long double         ldouble;

struct debug_t {
	template <typename T>
	debug_t& operator<<(const T& value) {
#       ifdef LOCAL_DEBUG
			cout << value << flush;
#       endif
		return *this;
	}

	debug_t& write(const char data[ ], size_t n) {
#       ifdef LOCAL_DEBUG
			cout.write(data, n);
			cout << flush;
#       endif
		return *this;
	}
} debug;



int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	$0
}]]></content>
	<tabTrigger>cpt</tabTrigger>
	<scope>source.c++, source.objc++</scope>
</snippet>
